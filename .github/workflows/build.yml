name: Build-Veloera

on: workflow_dispatch

permissions:
  contents: read
  actions: write

jobs:
  test:
    runs-on: ubuntu-latest
    name: Build Veloera
    steps:
    
      - uses: actions/checkout@v3
    
      - name: Set up Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Clone Repo
        run: |
            export LATEST_APP=$(wget -qO- https://api.github.com/repos/Veloera/Veloera/tags | gawk -F '["v]' '/name/{print "v"$5;exit}')
            git clone -b $LATEST_APP https://github.com/Veloera/Veloera

      - name: Build Frontend
        env:
          CI: ""
        run: |
          cd Veloera/web
          bun install
          # 尝试安装sse模块
          bun add sse
          # 创建vite.config.js，配置JSX支持和外部依赖
          cat > vite.config.js << 'EOF'
          import { defineConfig } from "vite";
          import react from "@vitejs/plugin-react";
          
          export default defineConfig({
            esbuild: {
              loader: "jsx",
              include: /src\/.*\.[jt]sx?$/,
              exclude: []
            },
            optimizeDeps: {
              esbuildOptions: {
                loader: {
                  ".js": "jsx"
                }
              }
            },
            build: {
              rollupOptions: {
                external: ["sse"]
              }
            },
            plugins: [react()]
          });
          EOF
          # 尝试构建
          DISABLE_ESLINT_PLUGIN='true' VITE_REACT_APP_VERSION=$(git describe --tags) bun run build
          cd ../..

      - name: Build Backend
        uses: vmactions/freebsd-vm@v1
        with:
          usesh: true
          release: 13.2
          prepare: |
            pkg install -y jq wget curl git gcc bash gawk gsed
            wget https://dl.google.com/go/go1.24.4.freebsd-amd64.tar.gz && tar -C /usr/local -xzf go1.24.4.freebsd-amd64.tar.gz && rm go1.24.4.freebsd-amd64.tar.gz
            ln -s /usr/local/go/bin/go /usr/local/bin/go
            # curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
            # echo '. $HOME/.cargo/env' >> ~/.bashrc
            # . "$HOME/.cargo/env"
          run: |
            git config --global --add safe.directory /home/runner/work/Veloera-freebsd/Veloera-freebsd/Veloera
            cd Veloera
            go mod download
            go build -ldflags "-s -w -X 'one-api/common.Version=$(git describe --tags)' -extldflags '-static'" -o veloera

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: veloera-freebsd
          path: Veloera/veloera
  
      - name: Generate release tag
        id: tag
        run: echo "release_tag=$(wget -qO- https://api.github.com/repos/Veloera/Veloera/tags | gawk -F '["v]' '/name/{print "v"$5;exit}')" >> $GITHUB_OUTPUT

      - name: Create release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag.outputs.release_tag }}
          files: Veloera/veloera
              
      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        with:
          token: ${{ github.token }}
          repository: ${{ github.repository }}
          retain_days: 1
          keep_minimum_runs: 8
